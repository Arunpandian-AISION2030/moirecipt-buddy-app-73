import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { useToast } from "@/hooks/use-toast";
import { Bluetooth, Printer, ArrowLeft, FileText } from "lucide-react";
import { useState, useRef } from "react";
import { useLanguage } from "@/contexts/LanguageContext";
import BluetoothPrinterConnection from "./BluetoothPrinterConnection";
import { useReactToPrint } from 'react-to-print';

interface MOIReceiptData {
  receiptNumber: string;
  customerName: string;
  functionType: string;
  functionDate: string;
  contributorName: string;
  contributorPlace: string;
  amount: string;
  paymentMode: string;
  timestamp: string;
}

interface MOIReceiptPrintProps {
  receiptData: MOIReceiptData[];
  customerData: {
    customerName: string;
    functionType: string;
    functionDate: string;
    venue: string;
  };
  onBack: () => void;
}

const MOIReceiptPrint = ({ receiptData, customerData, onBack }: MOIReceiptPrintProps) => {
  const { t, language } = useLanguage();
  const { toast } = useToast();
  const [showBluetoothPrinter, setShowBluetoothPrinter] = useState(false);
  const [printFunction, setPrintFunction] = useState<((text: string) => Promise<void>) | null>(null);
  const printRef = useRef<HTMLDivElement>(null);

  const getPaymentModeInTamil = (mode: string) => {
    const tamilModes: { [key: string]: string } = {
      'cash': '‡Æ∞‡ØÇ‡Æ™‡Ææ‡ÆØ‡Øç ‡Æï‡Ææ‡Æö‡Ææ‡Æï',
      'card': '‡Æï‡Ææ‡Æ∞‡Øç‡Æü‡Ææ‡Æï',
      'upi': 'UPI ‡ÆÜ‡Æï',
      'gpay': 'GPay ‡ÆÜ‡Æï',
      'cheque': '‡Æï‡Ææ‡Æö‡Øã‡Æ≤‡Øà‡ÆØ‡Ææ‡Æï'
    };
    return language === 'ta' ? (tamilModes[mode] || mode) : mode;
  };

  const getFunctionTypeInTamil = (type: string) => {
    const tamilTypes: { [key: string]: string } = {
      'wedding': '‡Æï‡Æ≤‡Øç‡ÆØ‡Ææ‡Æ£‡ÆÆ‡Øç',
      'birthday': '‡Æµ‡ÆØ‡Æ§‡ØÅ ‡Æµ‡Æø‡Æ¥‡Ææ',
      'anniversary': '‡ÆÜ‡Æ£‡Øç‡Æü‡ØÅ ‡Æµ‡Æø‡Æ¥‡Ææ',
      'puberty': '‡Æ™‡ØÇ‡Æ™‡Øç‡Æ™‡ØÅ‡Æ©‡Æø‡Æ§ ‡Æµ‡Æø‡Æ¥‡Ææ',
      'engagement': '‡Æ®‡Æø‡Æö‡Øç‡Æö‡ÆØ‡Æ§‡Ææ‡Æ∞‡Øç‡Æ§‡Øç‡Æ§‡ÆÆ‡Øç',
      'housewarming': '‡Æï‡Æø‡Æ∞‡Æï‡Æ™‡Øç‡Æ™‡Æø‡Æ∞‡Æµ‡Øá‡Æö‡ÆÆ‡Øç'
    };
    return language === 'ta' ? (tamilTypes[type] || type) : type;
  };

  const generateMOIReceiptText = (receipt: MOIReceiptData) => {
    if (language === 'ta') {
      return `
-----------------------------------------
              MOI ‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ
-----------------------------------------
‡Æµ‡Ææ‡Æü‡Æø‡Æï‡Øç‡Æï‡Øà‡ÆØ‡Ææ‡Æ≥‡Æ∞‡Øç ‡Æ™‡ØÜ‡ÆØ‡Æ∞‡Øç: ${receipt.customerName}
‡Æ®‡Æø‡Æï‡Æ¥‡Øç‡Æµ‡ØÅ: ${getFunctionTypeInTamil(receipt.functionType)}
‡Æ§‡Øá‡Æ§‡Æø: ${receipt.functionDate}
‡Æá‡Æü‡ÆÆ‡Øç: ${customerData.venue}

‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Æø‡Æ™‡Øç‡Æ™‡Ææ‡Æ≥‡Æ∞‡Øç‡Æï‡Æ≥‡Øç:

${receipt.contributorName} ‚Äì ‚Çπ${receipt.amount} (${getPaymentModeInTamil(receipt.paymentMode)})

‡ÆÆ‡Øä‡Æ§‡Øç‡Æ§ ‡Æ§‡Øä‡Æï‡Øà: ‚Çπ${receipt.amount}

‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ ‡Æâ‡Æ∞‡ØÅ‡Æµ‡Ææ‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æ®‡Øá‡Æ∞‡ÆÆ‡Øç:
${new Date().toLocaleDateString('ta-IN')}, ${new Date().toLocaleTimeString('ta-IN')}

üíº ‡Æ®‡Æø‡Æ±‡ØÅ‡Æµ‡Æ©‡ÆÆ‡Øç: ‡ÆÆ‡Øä‡ÆØ‡Øç-‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ
üìû ‡Æ§‡Øä‡Æü‡Æ∞‡Øç‡Æ™‡ØÅ ‡Æé‡Æ£‡Øç: +91 90808 06765
üåê www.moireceipt.com
      `.trim();
    } else {
      return `
-----------------------------------------
              MOI RECEIPT
-----------------------------------------
Customer Name  : ${receipt.customerName}
Event          : ${receipt.functionType}
Date           : ${receipt.functionDate}
Venue          : ${customerData.venue}

Contributors:

${receipt.contributorName} ‚Äì ‚Çπ${receipt.amount} (${receipt.paymentMode})

Total Amount: ‚Çπ${receipt.amount}

Receipt Generated:
${new Date().toLocaleDateString()}, ${new Date().toLocaleTimeString()}

üíº Company: Moi-Receipt
üìû Contact: +91 90808 06765
üåê www.moireceipt.com
      `.trim();
    }
  };

  const generateSummaryText = () => {
    const totalAmount = receiptData.reduce((sum, receipt) => sum + parseFloat(receipt.amount || '0'), 0);
    
    if (language === 'ta') {
      return `
‡ÆÆ‡Øä‡ÆØ‡Øç-‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ - MOI ‡Æö‡ØÅ‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡ÆÆ‡Øç
================================

‡Æ®‡Æø‡Æï‡Æ¥‡Øç‡Æö‡Øç‡Æö‡Æø ‡Æµ‡Æø‡Æµ‡Æ∞‡Æô‡Øç‡Æï‡Æ≥‡Øç
--------------------------------
‡Æµ‡Ææ‡Æü‡Æø‡Æï‡Øç‡Æï‡Øà‡ÆØ‡Ææ‡Æ≥‡Æ∞‡Øç ‡Æ™‡ØÜ‡ÆØ‡Æ∞‡Øç: ${customerData.customerName}
‡Æ®‡Æø‡Æï‡Æ¥‡Øç‡Æµ‡ØÅ: ${getFunctionTypeInTamil(customerData.functionType)}
‡Æ§‡Øá‡Æ§‡Æø: ${customerData.functionDate}
‡Æá‡Æü‡ÆÆ‡Øç: ${customerData.venue}

‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡Æö‡ØÅ‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡ÆÆ‡Øç
================================
‡ÆÆ‡Øä‡Æ§‡Øç‡Æ§ ‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Æø‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Æ≥‡Øç: ${receiptData.length}
‡ÆÆ‡Øä‡Æ§‡Øç‡Æ§ ‡Æ§‡Øä‡Æï‡Øà: ‚Çπ${totalAmount.toLocaleString('ta-IN')}

‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Æø‡Æ™‡Øç‡Æ™‡Ææ‡Æ≥‡Æ∞‡Øç‡Æï‡Æ≥‡Øç ‡Æ™‡Æü‡Øç‡Æü‡Æø‡ÆØ‡Æ≤‡Øç
--------------------------------
${receiptData.map((receipt, index) => 
  `${index + 1}. ${receipt.contributorName} ‚Äì ‚Çπ${receipt.amount} (${getPaymentModeInTamil(receipt.paymentMode)})`
).join('\n')}

‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ ‡Æâ‡Æ∞‡ØÅ‡Æµ‡Ææ‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æ®‡Øá‡Æ∞‡ÆÆ‡Øç:
${new Date().toLocaleDateString('ta-IN')}, ${new Date().toLocaleTimeString('ta-IN')}

üíº ‡Æ®‡Æø‡Æ±‡ØÅ‡Æµ‡Æ©‡ÆÆ‡Øç: ‡ÆÆ‡Øä‡ÆØ‡Øç-‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ
üìû ‡Æ§‡Øä‡Æü‡Æ∞‡Øç‡Æ™‡ØÅ ‡Æé‡Æ£‡Øç: +91 90808 06765
üåê www.moireceipt.com
      `.trim();
    } else {
      return `
Moi-Receipt - MOI Summary
================================

FUNCTION DETAILS
--------------------------------
Customer: ${customerData.customerName}
Function Type: ${customerData.functionType}
Date: ${customerData.functionDate}
Venue: ${customerData.venue}

CONTRIBUTION SUMMARY
================================
Total Contributions: ${receiptData.length}
Total Amount: ‚Çπ${totalAmount.toLocaleString('en-IN')}

CONTRIBUTORS LIST
--------------------------------
${receiptData.map((receipt, index) => 
  `${index + 1}. ${receipt.contributorName} - ‚Çπ${receipt.amount} (${receipt.paymentMode})`
).join('\n')}

Generated: ${new Date().toLocaleString()}

üíº Company: Moi-Receipt
üìû Contact: +91 90808 06765
üåê www.moireceipt.com
      `.trim();
    }
  };

  const handlePrintA4Table = useReactToPrint({
    content: () => printRef.current,
  });

  const handlePrintIndividualReceipt = async (receipt: MOIReceiptData) => {
    if (!printFunction) {
      toast({
        title: language === 'ta' ? "‡Æ™‡Æø‡Æ∞‡Æø‡Æ£‡Øç‡Æü‡Æ∞‡Øç ‡Æá‡Æ£‡Øà‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Æµ‡Æø‡Æ≤‡Øç‡Æ≤‡Øà" : "Printer Not Connected",
        description: language === 'ta' ? 
          "‡ÆÆ‡ØÅ‡Æ§‡Æ≤‡Æø‡Æ≤‡Øç Bluetooth ‡Æ™‡Æø‡Æ∞‡Æø‡Æ£‡Øç‡Æü‡Æ∞‡Øà ‡Æá‡Æ£‡Øà‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç" : 
          "Please connect a Bluetooth printer first",
        variant: "destructive"
      });
      return;
    }

    try {
      const printText = generateMOIReceiptText(receipt);
      await printFunction(printText);
      
      toast({
        title: language === 'ta' ? "‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ ‡ÆÖ‡Æö‡Øç‡Æö‡Æø‡Æü‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡Æ§‡ØÅ!" : "Receipt Printed!",
        description: language === 'ta' ? 
          `${receipt.contributorName} ‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ ‡ÆÖ‡Æö‡Øç‡Æö‡Æø‡Æü‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡Æ§‡ØÅ` : 
          `Receipt for ${receipt.contributorName} printed successfully`,
      });
    } catch (error) {
      toast({
        title: language === 'ta' ? "‡Æ™‡Æø‡Æ∞‡Æø‡Æ£‡Øç‡Æü‡Øç ‡Æ§‡Øã‡Æ≤‡Øç‡Æµ‡Æø" : "Print Failed",
        description: language === 'ta' ? 
          "‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ ‡ÆÖ‡Æö‡Øç‡Æö‡Æø‡Æü ‡ÆÆ‡ØÅ‡Æü‡Æø‡ÆØ‡Æµ‡Æø‡Æ≤‡Øç‡Æ≤‡Øà" : 
          "Failed to print the receipt",
        variant: "destructive"
      });
    }
  };

  const handlePrintSummary = async () => {
    if (!printFunction) {
      toast({
        title: language === 'ta' ? "‡Æ™‡Æø‡Æ∞‡Æø‡Æ£‡Øç‡Æü‡Æ∞‡Øç ‡Æá‡Æ£‡Øà‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Æµ‡Æø‡Æ≤‡Øç‡Æ≤‡Øà" : "Printer Not Connected",
        description: language === 'ta' ? 
          "‡ÆÆ‡ØÅ‡Æ§‡Æ≤‡Æø‡Æ≤‡Øç Bluetooth ‡Æ™‡Æø‡Æ∞‡Æø‡Æ£‡Øç‡Æü‡Æ∞‡Øà ‡Æá‡Æ£‡Øà‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç" : 
          "Please connect a Bluetooth printer first",
        variant: "destructive"
      });
      return;
    }

    try {
      const printText = generateSummaryText();
      await printFunction(printText);
      
      toast({
        title: language === 'ta' ? "‡Æö‡ØÅ‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡ÆÆ‡Øç ‡ÆÖ‡Æö‡Øç‡Æö‡Æø‡Æü‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡Æ§‡ØÅ!" : "Summary Printed!",
        description: language === 'ta' ? 
          "MOI ‡Æö‡ØÅ‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡ÆÆ‡Øç ‡ÆÖ‡Æö‡Øç‡Æö‡Æø‡Æü‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡Æ§‡ØÅ" : 
          "MOI summary printed successfully",
      });
    } catch (error) {
      toast({
        title: language === 'ta' ? "‡Æ™‡Æø‡Æ∞‡Æø‡Æ£‡Øç‡Æü‡Øç ‡Æ§‡Øã‡Æ≤‡Øç‡Æµ‡Æø" : "Print Failed",
        description: language === 'ta' ? 
          "‡Æö‡ØÅ‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡ÆÆ‡Øç ‡ÆÖ‡Æö‡Øç‡Æö‡Æø‡Æü ‡ÆÆ‡ØÅ‡Æü‡Æø‡ÆØ‡Æµ‡Æø‡Æ≤‡Øç‡Æ≤‡Øà" : 
          "Failed to print the summary",
        variant: "destructive"
      });
    }
  };

  const totalAmount = receiptData.reduce((sum, receipt) => sum + parseFloat(receipt.amount || '0'), 0);

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-purple-50">
      {/* Header */}
      <div className="bg-gradient-to-r from-green-600 to-blue-600 text-white p-4">
        <div className="max-w-4xl mx-auto flex items-center gap-4">
          <Button
            variant="ghost"
            size="sm"
            onClick={onBack}
            className="text-white hover:bg-white/20"
          >
            <ArrowLeft size={20} />
          </Button>
          <h1 className="text-xl font-bold">
            {language === 'ta' ? 'MOI ‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ ‡ÆÖ‡Æö‡Øç‡Æö‡Æø‡Æü‡ØÅ‡Æ§‡Æ≤‡Øç' : 'MOI Receipt Printing'}
          </h1>
        </div>
      </div>

      <div className="max-w-4xl mx-auto p-4">
        {/* Bluetooth Printer Connection */}
        <div className="mb-6">
          <BluetoothPrinterConnection 
            onPrintRequest={(fn) => setPrintFunction(() => fn)}
          />
        </div>

        {/* Summary Card */}
        <Card className="mb-6">
          <CardHeader>
            <CardTitle className="flex items-center justify-between">
              <span>{language === 'ta' ? 'MOI ‡Æö‡ØÅ‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡ÆÆ‡Øç' : 'MOI Summary'}</span>
              <div className="flex gap-2">
                <Button
                  onClick={handlePrintA4Table}
                  className="bg-gradient-to-r from-orange-600 to-red-600"
                >
                  <FileText className="mr-2" size={16} />
                  {language === 'ta' ? 'A4 ‡ÆÖ‡Æü‡Øç‡Æü‡Æµ‡Æ£‡Øà' : 'A4 Table'}
                </Button>
                <Button
                  onClick={handlePrintSummary}
                  disabled={!printFunction}
                  className="bg-gradient-to-r from-blue-600 to-purple-600"
                >
                  <Printer className="mr-2" size={16} />
                  {language === 'ta' ? '‡Æö‡ØÅ‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡ÆÆ‡Øç ‡ÆÖ‡Æö‡Øç‡Æö‡Æø‡Æü‡ØÅ' : 'Print Summary'}
                </Button>
              </div>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <p><strong>{language === 'ta' ? '‡Æµ‡Ææ‡Æü‡Æø‡Æï‡Øç‡Æï‡Øà‡ÆØ‡Ææ‡Æ≥‡Æ∞‡Øç:' : 'Customer:'}</strong> {customerData.customerName}</p>
                <p><strong>{language === 'ta' ? '‡Æ®‡Æø‡Æï‡Æ¥‡Øç‡Æö‡Øç‡Æö‡Æø:' : 'Function:'}</strong> {language === 'ta' ? getFunctionTypeInTamil(customerData.functionType) : customerData.functionType}</p>
              </div>
              <div>
                <p><strong>{language === 'ta' ? '‡ÆÆ‡Øä‡Æ§‡Øç‡Æ§ ‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Æø‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Æ≥‡Øç:' : 'Total Contributions:'}</strong> {receiptData.length}</p>
                <p><strong>{language === 'ta' ? '‡ÆÆ‡Øä‡Æ§‡Øç‡Æ§ ‡Æ§‡Øä‡Æï‡Øà:' : 'Total Amount:'}</strong> ‚Çπ{totalAmount.toLocaleString(language === 'ta' ? 'ta-IN' : 'en-IN')}</p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* A4 Printable Table - Hidden but printable */}
        <div ref={printRef} className="hidden print:block" style={{ width: '210mm', minHeight: '297mm', padding: '20mm' }}>
          <div className="text-center mb-8">
            <h1 className="text-2xl font-bold mb-2">MOI Receipt Summary Report</h1>
            <p className="text-gray-600">Generated on {new Date().toLocaleDateString()}</p>
            <div className="mt-4 text-left">
              <p><strong>Customer:</strong> {customerData.customerName}</p>
              <p><strong>Function:</strong> {customerData.functionType}</p>
              <p><strong>Date:</strong> {customerData.functionDate}</p>
              <p><strong>Venue:</strong> {customerData.venue}</p>
            </div>
          </div>
          
          <table className="w-full border-collapse border border-gray-300 text-sm">
            <thead>
              <tr className="bg-gray-100">
                <th className="border border-gray-300 p-2 text-left">S.No</th>
                <th className="border border-gray-300 p-2 text-left">Contributor Name</th>
                <th className="border border-gray-300 p-2 text-left">Place</th>
                <th className="border border-gray-300 p-2 text-left">Amount (‚Çπ)</th>
                <th className="border border-gray-300 p-2 text-left">Payment Mode</th>
              </tr>
            </thead>
            <tbody>
              {receiptData.map((receipt, index) => (
                <tr key={index}>
                  <td className="border border-gray-300 p-2">{index + 1}</td>
                  <td className="border border-gray-300 p-2">{receipt.contributorName}</td>
                  <td className="border border-gray-300 p-2">{receipt.contributorPlace}</td>
                  <td className="border border-gray-300 p-2">‚Çπ{parseFloat(receipt.amount).toLocaleString('en-IN')}</td>
                  <td className="border border-gray-300 p-2">{receipt.paymentMode}</td>
                </tr>
              ))}
            </tbody>
            <tfoot>
              <tr className="bg-gray-50 font-bold">
                <td colSpan={3} className="border border-gray-300 p-2 text-right">Total Amount:</td>
                <td className="border border-gray-300 p-2">‚Çπ{totalAmount.toLocaleString('en-IN')}</td>
                <td className="border border-gray-300 p-2"></td>
              </tr>
            </tfoot>
          </table>
          
          <div className="mt-8 text-center text-sm text-gray-600">
            <p>üíº Company: Moi-Receipt | üìû Contact: +91 90808 06765 | üåê www.moireceipt.com</p>
          </div>
        </div>

        {/* Individual Receipts - Existing code but with edit prevention for guests */}
        <div className="space-y-4">
          <h3 className="text-lg font-semibold">
            {language === 'ta' ? '‡Æ§‡Æ©‡Æø‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ‡Æï‡Æ≥‡Øç' : 'Individual Receipts'}
          </h3>
          
          {receiptData.map((receipt, index) => (
            <Card key={index} className="border border-gray-200">
              <CardContent className="p-6">
                {/* Preview of Receipt */}
                <div className="bg-gray-50 p-4 rounded-lg mb-4 font-mono text-sm">
                  <div className="text-center font-bold mb-2">
                    {language === 'ta' ? 'MOI ‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ' : 'MOI RECEIPT'}
                  </div>
                  <div className="border-t border-b border-gray-300 py-2 space-y-1">
                    {language === 'ta' ? (
                      <>
                        <div><strong>‡Æµ‡Ææ‡Æü‡Æø‡Æï‡Øç‡Æï‡Øà‡ÆØ‡Ææ‡Æ≥‡Æ∞‡Øç ‡Æ™‡ØÜ‡ÆØ‡Æ∞‡Øç:</strong> {receipt.customerName}</div>
                        <div><strong>‡Æ®‡Æø‡Æï‡Æ¥‡Øç‡Æµ‡ØÅ:</strong> {getFunctionTypeInTamil(receipt.functionType)}</div>
                        <div><strong>‡Æ§‡Øá‡Æ§‡Æø:</strong> {receipt.functionDate}</div>
                        <div><strong>‡Æá‡Æü‡ÆÆ‡Øç:</strong> {customerData.venue}</div>
                        <div className="pt-2 border-t">
                          <strong>‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Æø‡Æ™‡Øç‡Æ™‡Ææ‡Æ≥‡Æ∞‡Øç:</strong> {receipt.contributorName} ‚Äì ‚Çπ{receipt.amount} ({getPaymentModeInTamil(receipt.paymentMode)})
                        </div>
                      </>
                    ) : (
                      <>
                        <div><strong>Customer:</strong> {receipt.customerName}</div>
                        <div><strong>Event:</strong> {receipt.functionType}</div>
                        <div><strong>Date:</strong> {receipt.functionDate}</div>
                        <div><strong>Venue:</strong> {customerData.venue}</div>
                        <div className="pt-2 border-t">
                          <strong>Contributor:</strong> {receipt.contributorName} ‚Äì ‚Çπ{receipt.amount} ({receipt.paymentMode})
                        </div>
                      </>
                    )}
                  </div>
                  <div className="text-center text-xs mt-2 text-gray-600">
                    {language === 'ta' ? 
                      'üíº ‡Æ®‡Æø‡Æ±‡ØÅ‡Æµ‡Æ©‡ÆÆ‡Øç: ‡ÆÆ‡Øä‡ÆØ‡Øç-‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ | üìû +91 90808 06765' : 
                      'üíº Company: Moi-Receipt | üìû +91 90808 06765'
                    }
                  </div>
                </div>
                
                <div className="flex justify-between items-center">
                  <div>
                    <p className="text-sm text-gray-600">
                      {language === 'ta' ? '‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ ‡Æé‡Æ£‡Øç:' : 'Receipt No:'} {receipt.receiptNumber}
                    </p>
                    <p className="text-xs text-gray-500 mt-1">
                      {language === 'ta' ? '‡Æ®‡Æø‡Æ≤‡Øà: ‡Æ™‡ØÇ‡Æ∞‡Øç‡Æ§‡Øç‡Æ§‡Æø ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡Æ§‡ØÅ' : 'Status: Completed - Cannot Edit'}
                    </p>
                  </div>
                  <Button
                    onClick={() => handlePrintIndividualReceipt(receipt)}
                    disabled={!printFunction}
                    size="sm"
                    className="bg-gradient-to-r from-green-600 to-blue-600"
                  >
                    <Printer className="mr-2" size={14} />
                    {language === 'ta' ? '‡ÆÖ‡Æö‡Øç‡Æö‡Æø‡Æü‡ØÅ' : 'Print'}
                  </Button>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {receiptData.length === 0 && (
          <Card className="text-center py-12">
            <CardContent>
              <p className="text-gray-600">
                {language === 'ta' ? 'MOI ‡Æ∞‡Æö‡ØÄ‡Æ§‡ØÅ‡Æï‡Æ≥‡Øç ‡Æá‡Æ≤‡Øç‡Æ≤‡Øà' : 'No MOI receipts available'}
              </p>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
};

export default MOIReceiptPrint;
