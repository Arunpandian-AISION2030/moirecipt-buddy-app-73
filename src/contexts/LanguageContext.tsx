
import { createContext, useContext, useState, ReactNode } from 'react';

type Language = 'en' | 'ta';

interface LanguageContextType {
  language: Language;
  toggleLanguage: () => void;
  t: (key: string) => string;
}

const translations = {
  en: {
    // Splash Screen
    splash_welcome: "Welcome to Moirecipt",
    splash_subtitle: "Your Receipt's New Best Friend!",
    
    // Onboarding
    onboarding_slide1_title: "Snap your receipt in seconds ЁЯУ╕",
    onboarding_slide2_title: "Save and sort receipts safely ЁЯФТ", 
    onboarding_slide3_title: "Track your spending, the easy way ЁЯТ╕",
    get_started: "Get Started",
    next: "Next",
    skip: "Skip",
    
    // Dashboard
    dashboard_title: "Your Receipts & Bills Hub ЁЯУЛ",
    dashboard_subtitle: "Manage receipts and event billing in one place",
    recent_receipts: "Recent Receipts",
    recent_activity: "Recent Activity",
    monthly_summary: "Monthly Summary",
    add_receipt: "Add New Receipt",
    total_spent: "Total Spent",
    this_month: "This Month",
    items_this_week: "Items this week",
    
    // Navigation & Descriptions
    receipts_menu: "Receipts",
    receipts_description: "Regular receipts & expenses",
    receipts_subtitle: "Snap, save, track",
    bills_menu: "Event Bills",
    bills_description: "Wedding & event billing",
    bills_subtitle: "Professional invoices",
    
    // Time references
    today: "Today",
    yesterday: "Yesterday",
    two_days_ago: "2 days ago",
    
    // Categories
    food: "Food",
    travel: "Travel", 
    shopping: "Shopping",
    bills: "Bills",
    
    // Actions
    snap_now: "Snap Now",
    upload: "Upload",
    edit: "Edit",
    share: "Share",
    download_pdf: "Download as PDF",
    
    // Empty states
    no_receipts: "No receipts yet. Let's change that!",
    
    // Login
    login_title: "Hey there! Let's log you in.",
    login_google: "Login with Google",

    // Bill Entry Form
    bill_entry_title: "Event Bill Entry ЁЯОЙ",
    client_name: "S.O. / D.O. Name",
    native_place: "Native Place",
    function_type: "Function Type",
    function_date: "Date of Function",
    venue_details: "Venue Name & Address",
    contact_number: "Contact Number",
    services_provided: "Items / Services Provided",
    total_amount: "Amount Charged",
    advance_paid: "Advance Paid",
    balance_due: "Balance Due",
    payment_mode: "Payment Mode",
    
    // Function Types
    wedding: "Wedding",
    birthday: "Birthday",
    anniversary: "Anniversary",
    other: "Other",
    
    // Payment Modes
    cash: "Cash",
    gpay: "GPay",
    cheque: "Cheque",
    upi: "UPI",
    
    // Bill Summary
    bill_summary_title: "Event Bill Summary",
    invoice_number: "Invoice No.",
    thank_you_message: "Thank you for choosing us! Wishing you a beautiful celebration!",
    
    // Actions
    create_bill: "Create Bill",
    save_bill: "Save Bill",
    print_bill: "Print Bill",
    share_whatsapp: "Share via WhatsApp",
    view_summary: "View Summary",
    edit_bill: "Edit Bill",
    
    // Navigation
    back: "Back",
    home: "Home",
    settings: "Settings",
    
    // Form validation
    required_field: "This field is required",
    invalid_amount: "Please enter a valid amount",
    invalid_contact: "Please enter a valid contact number",

    // Bluetooth Printer
    bluetooth_printer: "Bluetooth Printer",
    scan_printers: "Scan for Printers",
    scanning: "Scanning...",
    printer_found: "Printer Found!",
    no_printers_found: "No Printers Found",
    printer_connected: "Printer Connected!",
    connection_failed: "Connection Failed",
    printer_disconnected: "Printer Disconnected",
    disconnect_failed: "Disconnect Failed",
    connected: "Connected",
    not_connected: "Not Connected",
    disconnect: "Disconnect",
    available_printers: "Available Printers:",
    bluetooth_print: "Bluetooth Print",
    print_successful: "Print Successful!",
    print_failed: "Print Failed",
    printer_not_connected: "Printer Not Connected",
    connect_printer_first: "Please connect a Bluetooth printer first",
    receipt_printed: "Receipt Printed!",
    summary_printed: "Summary Printed!",

    // MOI Receipt specific
    moi_receipt_entry: "MOI Receipt Entry",
    customer_function_entry: "Customer & Function Entry",
    choose_bill_type: "Choose Bill Type",
    traditional_bill: "Traditional Bill",
    moi_receipt_description: "Record individual contributions for functions",
    traditional_bill_description: "Create comprehensive event bills",
    step_process: "Step 1: Customer & Function тЖТ Step 2: MOI Receipts",
    single_form: "Single form with all billing details",
  },
  ta: {
    // Splash Screen  
    splash_welcome: "роорпЛроЗро░ро┐роЪро┐рокрпНроЯрпН-роХрпНроХрпБ ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН",
    splash_subtitle: "роЙроЩрпНроХро│рпН ро░роЪрпАродрпБ роЗройро┐роорпЗро▓рпН роОройрпН рокро╛роЯрпНроЯрпБроХрпНроХрпБ!",
    
    // Onboarding
    onboarding_slide1_title: "ро░роЪрпАродрпИ рокро│рпАроЪрпН роОрой роТро░рпБ роХро┐ро│ро┐роХрпНроХро┐ро▓рпН рокро┐роЯро┐роХрпНроХро▓ро╛роорпН! ЁЯУ╕",
    onboarding_slide2_title: "роЙроЩрпНроХро│рпН ро░роЪрпАродрпБроХро│рпН рокро╛родрпБроХро╛рокрпНрокро╛роХ роЪрпЗрооро┐роХрпНроХрокрпНрокроЯрпБроорпН! ЁЯФТ",
    onboarding_slide3_title: "роЪрпЖро▓ро╡рпБроХро│рпИ роОро│ро┐родро╛роХ роХрогрпНроХро╛рогро┐роХрпНроХро▓ро╛роорпН! ЁЯТ╕", 
    get_started: "роЖро░роорпНрокро┐роХрпНроХро▓ро╛роорпН",
    next: "роЕроЯрпБродрпНродрпБ",
    skip: "родро╡ро┐ро░рпН",
    
    // Dashboard
    dashboard_title: "роЙроЩрпНроХро│рпН ро░роЪрпАродрпБ & рокро┐ро▓рпН роорпИропроорпН ЁЯУЛ",
    dashboard_subtitle: "ро░роЪрпАродрпБроХро│рпН рооро▒рпНро▒рпБроорпН роиро┐роХро┤рпНроЪрпНроЪро┐ рокро┐ро▓рпНро▓ро┐роЩрпН роТро░рпЗ роЗроЯродрпНродро┐ро▓рпН",
    recent_receipts: "рокрпБродро┐роп ро░роЪрпАродрпБроХро│рпН",
    recent_activity: "роЪроорпАрокродрпНродро┐роп роЪрпЖропро▓рпНрокро╛роЯрпБ",
    monthly_summary: "рооро╛род роЪрпЖро▓ро╡рпБроХро│рпН", 
    add_receipt: "рокрпБродро┐роп ро░роЪрпАродрпБ роЪрпЗро░рпНроХрпНроХ",
    total_spent: "роорпКродрпНрод роЪрпЖро▓ро╡рпБ",
    this_month: "роЗроирпНрод рооро╛родроорпН",
    items_this_week: "роЗроирпНрод ро╡ро╛ро░роорпН рокрпКро░рпБроЯрпНроХро│рпН",
    
    // Navigation & Descriptions
    receipts_menu: "ро░роЪрпАродрпБроХро│рпН",
    receipts_description: "ро╡ро┤роХрпНроХрооро╛рой ро░роЪрпАродрпБроХро│рпН & роЪрпЖро▓ро╡рпБроХро│рпН",
    receipts_subtitle: "роОроЯрпБ, роЪрпЗрооро┐, роХрогрпНроХро╛рогро┐",
    bills_menu: "ро╡ро┐ро┤ро╛ рокро┐ро▓рпНроХро│рпН",
    bills_description: "родро┐ро░рпБроорогроорпН & роиро┐роХро┤рпНроЪрпНроЪро┐ рокро┐ро▓рпНро▓ро┐роЩрпН",
    bills_subtitle: "родрпКро┤ро┐ро▓рпНроорпБро▒рпИ рокро┐ро▓рпНроХро│рпН",
    
    // Time references
    today: "роЗройрпНро▒рпБ",
    yesterday: "роирпЗро▒рпНро▒рпБ",
    two_days_ago: "2 роиро╛роЯрпНроХро│рпБроХрпНроХрпБ роорпБройрпН",
    
    // Categories
    food: "роЪро╛рокрпНрокро╛роЯрпБ",
    travel: "рокропрогроорпН",
    shopping: "ро╖ро╛рокрпНрокро┐роЩрпН", 
    bills: "рокро┐ро▓рпНроХро│рпН",
    
    // Actions
    snap_now: "роЗрокрпНрокрпЛродрпЗ роОроЯрпБ!",
    upload: "рокродро┐ро╡рпЗро▒рпНро▒рпБ",
    edit: "рооро╛ро▒рпНро▒рпБ",
    share: "рокроХро┐ро░рпН",
    download_pdf: "PDF роЖроХ роЗро▒роХрпНроХрпБ",
    
    // Empty states
    no_receipts: "роЗройрпНройрпБроорпН ро░роЪрпАродрпБроХро│рпН роЗро▓рпНро▓... ро╡ро╛роЩрпНроХ роТро░рпБ рокрпБродро┐ропродрпИ роЪрпЗро░рпН!",
    
    // Login
    login_title: "ро╡ро╛роЩрпНроХ роирогрпНрокро╛! роЙро│рпНро│рпЗ рокрпЛропро┐роЯро▓ро╛роорпН.",
    login_google: "роХрпВроХро┐ро│рпН роХрпКрогрпНроЯрпБ роирпБро┤рпИропрпБроЩрпНроХро│рпН",

    // Bill Entry Form
    bill_entry_title: "ро╡ро┐ро┤ро╛ рокро┐ро▓рпН роОройрпНроЯрпНро░ро┐ ЁЯОЙ",
    client_name: "рокрпЖропро░рпН (роЕрокрпНрокро╛ро╡ро┐ройрпН рокрпЖропро░рпН роЙроЯройрпН)",
    native_place: "роКро░рпН / роЪрпКроирпНрод роЗроЯроорпН",
    function_type: "роиро┐роХро┤рпНроЪрпНроЪро┐ ро╡роХрпИ",
    function_date: "ро╡ро┐ро┤ро╛ родрпЗродро┐",
    venue_details: "ро╡ро┐ро┤ро╛ роироЯроХрпНроХрпБроорпН роЗроЯроорпН",
    contact_number: "родрпКроЯро░рпНрокрпБ роОрогрпН",
    services_provided: "ро╡ро┤роЩрпНроХро┐роп роЪрпЗро╡рпИроХро│рпН",
    total_amount: "рокрогроорпН (роорпКродрпНродроорпН)",
    advance_paid: "роорпБройрпНрокрогроорпН",
    balance_due: "роорпАродро┐ рокрогроорпН",
    payment_mode: "рокрогроорпН роХрпКроЯрпБродрпНрод ро╡ро┐родроорпН",
    
    // Function Types
    wedding: "родро┐ро░рпБроорогроорпН",
    birthday: "ро╡ропродрпБ ро╡ро┐ро┤ро╛",
    anniversary: "роЖрогрпНроЯрпБ ро╡ро┐ро┤ро╛",
    other: "рооро▒рпНро▒ро╡рпИ",
    
    // Payment Modes
    cash: "рокрогроорпН",
    gpay: "GPay",
    cheque: "роХро╛роЪрпЛро▓рпИ",
    upi: "UPI",
    
    // Bill Summary
    bill_summary_title: "ро╡ро┐ро┤ро╛ рокро┐ро▓рпН роЪрпБро░рпБроХрпНроХроорпН",
    invoice_number: "рокро┐ро▓рпН роОрогрпН.",
    thank_you_message: "роОроЩрпНроХро│рпИ родрпЗро░рпНроирпНродрпЖроЯрпБродрпНродродро▒рпНроХрпБ роиройрпНро▒ро┐! роЙроЩрпНроХро│рпН ро╡ро┐ро┤ро╛ роЗройро┐родро╛роХ роироЯрпИрокрпЖро▒ ро╡ро╛ро┤рпНродрпНродрпБроХро│рпН!",
    
    // Actions
    create_bill: "рокро┐ро▓рпН роЙро░рпБро╡ро╛роХрпНроХрпБ",
    save_bill: "рокро┐ро▓рпН роЪрпЗрооро┐",
    print_bill: "рокро┐ро▓рпН роЕроЪрпНроЪро┐роЯрпБ",
    share_whatsapp: "WhatsApp роорпВро▓роорпН рокроХро┐ро░рпН",
    view_summary: "роЪрпБро░рпБроХрпНроХроорпН рокро╛ро░рпН",
    edit_bill: "рокро┐ро▓рпН рооро╛ро▒рпНро▒рпБ",
    
    // Navigation
    back: "рокро┐ройрпНройро╛ро▓рпН",
    home: "ро╡рпАроЯрпБ",
    settings: "роЕроорпИрокрпНрокрпБроХро│рпН",
    
    // Form validation
    required_field: "роЗроирпНрод рокрпБро▓роорпН роЕро╡роЪро┐ропроорпН",
    invalid_amount: "роЪро░ро┐ропро╛рой родрпКроХрпИропрпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН",
    invalid_contact: "роЪро░ро┐ропро╛рой родрпКроЯро░рпНрокрпБ роОрогрпНрогрпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН",

    // Bluetooth Printer
    bluetooth_printer: "Bluetooth рокро┐ро░ро┐рогрпНроЯро░рпН",
    scan_printers: "рокро┐ро░ро┐рогрпНроЯро░рпН родрпЗроЯрпБ",
    scanning: "ро╕рпНроХрпЗройрпН роЪрпЖропрпНроХро┐ро▒родрпБ...",
    printer_found: "рокро┐ро░ро┐рогрпНроЯро░рпН роХрогрпНроЯрпБрокро┐роЯро┐роХрпНроХрокрпНрокроЯрпНроЯродрпБ!",
    no_printers_found: "рокро┐ро░ро┐рогрпНроЯро░рпН роЗро▓рпНро▓рпИ",
    printer_connected: "рокро┐ро░ро┐рогрпНроЯро░рпН роЗрогрпИроХрпНроХрокрпНрокроЯрпНроЯродрпБ!",
    connection_failed: "роЗрогрпИрокрпНрокрпБ родрпЛро▓рпНро╡ро┐",
    printer_disconnected: "рокро┐ро░ро┐рогрпНроЯро░рпН родрпБрогрпНроЯро┐роХрпНроХрокрпНрокроЯрпНроЯродрпБ",
    disconnect_failed: "родрпБрогрпНроЯро┐рокрпНрокрпБ родрпЛро▓рпНро╡ро┐",
    connected: "роЗрогрпИроХрпНроХрокрпНрокроЯрпНроЯродрпБ",
    not_connected: "роЗрогрпИроХрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ",
    disconnect: "родрпБрогрпНроЯро┐",
    available_printers: "роХро┐роЯрпИродрпНрод рокро┐ро░ро┐рогрпНроЯро░рпНроХро│рпН:",
    bluetooth_print: "Bluetooth рокро┐ро░ро┐рогрпНроЯрпН",
    print_successful: "рокро┐ро░ро┐рогрпНроЯрпН ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ!",
    print_failed: "рокро┐ро░ро┐рогрпНроЯрпН родрпЛро▓рпНро╡ро┐",
    printer_not_connected: "рокро┐ро░ро┐рогрпНроЯро░рпН роЗрогрпИроХрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ",
    connect_printer_first: "роорпБродро▓ро┐ро▓рпН Bluetooth рокро┐ро░ро┐рогрпНроЯро░рпИ роЗрогрпИроХрпНроХро╡рпБроорпН",
    receipt_printed: "ро░роЪрпАродрпБ роЕроЪрпНроЪро┐роЯрокрпНрокроЯрпНроЯродрпБ!",
    summary_printed: "роЪрпБро░рпБроХрпНроХроорпН роЕроЪрпНроЪро┐роЯрокрпНрокроЯрпНроЯродрпБ!",

    // MOI Receipt specific
    moi_receipt_entry: "MOI ро░роЪрпАродрпБ роОройрпНроЯрпНро░ро┐",
    customer_function_entry: "ро╡ро╛роЯро┐роХрпНроХрпИропро╛ро│ро░рпН & роиро┐роХро┤рпНроЪрпНроЪро┐ роОройрпНроЯрпНро░ро┐",
    choose_bill_type: "рокро┐ро▓рпН ро╡роХрпИропрпИ родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН",
    traditional_bill: "рокро╛ро░роорпНрокро░ро┐роп рокро┐ро▓рпН",
    moi_receipt_description: "роиро┐роХро┤рпНроЪрпНроЪро┐роХро│рпБроХрпНроХро╛рой родройро┐рокрпНрокроЯрпНроЯ рокроЩрпНроХро│ро┐рокрпНрокрпБроХро│рпИ рокродро┐ро╡рпБ роЪрпЖропрпНропро╡рпБроорпН",
    traditional_bill_description: "ро╡ро┐ро░ро┐ро╡ро╛рой роиро┐роХро┤рпНроЪрпНроЪро┐ рокро┐ро▓рпНроХро│рпИ роЙро░рпБро╡ро╛роХрпНроХро╡рпБроорпН",
    step_process: "рокроЯро┐ 1: ро╡ро╛роЯро┐роХрпНроХрпИропро╛ро│ро░рпН & роиро┐роХро┤рпНроЪрпНроЪро┐ тЖТ рокроЯро┐ 2: MOI ро░роЪрпАродрпБроХро│рпН",
    single_form: "роЕройрпИродрпНродрпБ рокро┐ро▓рпНро▓ро┐роЩрпН ро╡ро┐ро╡ро░роЩрпНроХро│рпБроЯройрпН роТро▒рпНро▒рпИ рокроЯро┐ро╡роорпН",
  }
};

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const LanguageProvider = ({ children }: { children: ReactNode }) => {
  const [language, setLanguage] = useState<Language>('en');

  const toggleLanguage = () => {
    setLanguage(prev => prev === 'en' ? 'ta' : 'en');
  };

  const t = (key: string): string => {
    return translations[language][key as keyof typeof translations['en']] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, toggleLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};
